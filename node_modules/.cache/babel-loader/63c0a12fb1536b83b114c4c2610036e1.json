{"ast":null,"code":"var _jsxFileName = \"/home/hp/Desktop/react-quiz/src/index.js\";\nimport React, { PureComponent } from 'react';\nimport ReactDom from 'react-dom';\nimport QuestionBox from './components/QuestionBox';\nimport './assets/style.css';\nimport quizService from './quizService';\n\nclass Quiz extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: []\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        console.log('question: ', question);\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    const {\n      questionBank\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Quiz App\"), questionBank.length > 0 && questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: options,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 111\n      }\n    })));\n  }\n\n}\n\nReactDom.render( /*#__PURE__*/React.createElement(Quiz, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/hp/Desktop/react-quiz/src/index.js"],"names":["React","PureComponent","ReactDom","QuestionBox","quizService","Quiz","state","questionBank","getQuestions","then","question","console","log","setState","componentDidMount","render","length","map","answers","correct","questionId","options","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAN,SAAmBJ,aAAnB,CAAiC;AAAA;AAAA;AAAA,SAC7BK,KAD6B,GACrB;AACJC,MAAAA,YAAY,EAAE;AADV,KADqB;;AAAA,SAK7BC,YAL6B,GAKd,MAAM;AACjBJ,MAAAA,WAAW,GAAGK,IAAd,CAAmBC,QAAQ,IAAI;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,QAA1B;AACA,aAAKG,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAEG;AADJ,SAAd;AAGH,OALD;AAMH,KAZ4B;AAAA;;AAc7BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,YAAL;AACH;;AACDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAAER,MAAAA;AAAF,QAAmB,KAAKD,KAA9B;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKC,YAAY,CAACS,MAAb,GAAsB,CAAtB,IAA2BT,YAAY,CAACU,GAAb,CAAiB,CAAC;AAAEP,MAAAA,QAAF;AAAYQ,MAAAA,OAAZ;AAAqBC,MAAAA,OAArB;AAA8BC,MAAAA;AAA9B,KAAD,kBAAiD,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEV,QAAvB;AAAiC,MAAA,OAAO,EAAEW,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlE,CAFhC,CADJ;AAMH;;AAzB4B;;AA2BjCnB,QAAQ,CAACa,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["import React, { PureComponent } from 'react';\nimport ReactDom from 'react-dom';\nimport QuestionBox from './components/QuestionBox';\nimport './assets/style.css';\nimport quizService from './quizService';\n\nclass Quiz extends PureComponent {\n    state = {\n        questionBank: []\n    }\n\n    getQuestions = () => {\n        quizService().then(question => {\n            console.log('question: ', question);\n            this.setState({\n                questionBank: question\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getQuestions()\n    }\n    render() {\n        const { questionBank } = this.state\n        return (\n            <div className='container'>\n                <div className='title'>Quiz App</div>\n                {questionBank.length > 0 && questionBank.map(({ question, answers, correct, questionId }) => (<QuestionBox question={question} options={options}/>))}\n            </div>\n        )\n    }\n}\nReactDom.render(<Quiz />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}